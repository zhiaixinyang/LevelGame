package com.mdove.levelgame.greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.mdove.levelgame.greendao.entity.HeroAttributes;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "HERO_ATTRIBUTES".
*/
public class HeroAttributesDao extends AbstractDao<HeroAttributes, Long> {

    public static final String TABLENAME = "HERO_ATTRIBUTES";

    /**
     * Properties of entity HeroAttributes.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Attack = new Property(1, int.class, "attack", false, "ATTACK");
        public final static Property AttackIncrease = new Property(2, int.class, "attackIncrease", false, "ATTACK_INCREASE");
        public final static Property Armor = new Property(3, int.class, "armor", false, "ARMOR");
        public final static Property ArmorIncrease = new Property(4, int.class, "armorIncrease", false, "ARMOR_INCREASE");
        public final static Property CurLife = new Property(5, int.class, "curLife", false, "CUR_LIFE");
        public final static Property LifeIncrease = new Property(6, int.class, "lifeIncrease", false, "LIFE_INCREASE");
        public final static Property MaxLife = new Property(7, int.class, "maxLife", false, "MAX_LIFE");
        public final static Property Money = new Property(8, int.class, "money", false, "MONEY");
        public final static Property Level = new Property(9, int.class, "level", false, "LEVEL");
        public final static Property Experience = new Property(10, long.class, "experience", false, "EXPERIENCE");
        public final static Property BaseExp = new Property(11, long.class, "baseExp", false, "BASE_EXP");
        public final static Property ExpMultiple = new Property(12, int.class, "expMultiple", false, "EXP_MULTIPLE");
        public final static Property BodyPower = new Property(13, int.class, "bodyPower", false, "BODY_POWER");
        public final static Property Days = new Property(14, int.class, "days", false, "DAYS");
        public final static Property AttackSpeed = new Property(15, long.class, "attackSpeed", false, "ATTACK_SPEED");
        public final static Property SkillCount = new Property(16, int.class, "skillCount", false, "SKILL_COUNT");
        public final static Property ShengWang = new Property(17, int.class, "shengWang", false, "SHENG_WANG");
        public final static Property LiLian = new Property(18, int.class, "liLian", false, "LI_LIAN");
        public final static Property LiLiang = new Property(19, int.class, "liLiang", false, "LI_LIANG");
        public final static Property LiLiangExp = new Property(20, long.class, "liLiangExp", false, "LI_LIANG_EXP");
        public final static Property LiLiangBaseExp = new Property(21, long.class, "liLiangBaseExp", false, "LI_LIANG_BASE_EXP");
        public final static Property LiLiangExpMultiple = new Property(22, int.class, "liLiangExpMultiple", false, "LI_LIANG_EXP_MULTIPLE");
        public final static Property MinJie = new Property(23, int.class, "minJie", false, "MIN_JIE");
        public final static Property MinJieExp = new Property(24, long.class, "minJieExp", false, "MIN_JIE_EXP");
        public final static Property MinJieBaseExp = new Property(25, long.class, "minJieBaseExp", false, "MIN_JIE_BASE_EXP");
        public final static Property MinJieExpMultiple = new Property(26, int.class, "minJieExpMultiple", false, "MIN_JIE_EXP_MULTIPLE");
        public final static Property ZhiHui = new Property(27, int.class, "zhiHui", false, "ZHI_HUI");
        public final static Property ZhiHuiExp = new Property(28, long.class, "zhiHuiExp", false, "ZHI_HUI_EXP");
        public final static Property ZhiHuiBaseExp = new Property(29, long.class, "zhiHuiBaseExp", false, "ZHI_HUI_BASE_EXP");
        public final static Property ZhiHuiExpMultiple = new Property(30, int.class, "zhiHuiExpMultiple", false, "ZHI_HUI_EXP_MULTIPLE");
        public final static Property QiangZhuang = new Property(31, int.class, "qiangZhuang", false, "QIANG_ZHUANG");
        public final static Property QiangZhuangExp = new Property(32, long.class, "qiangZhuangExp", false, "QIANG_ZHUANG_EXP");
        public final static Property QiangZhuangBaseExp = new Property(33, long.class, "qiangZhuangBaseExp", false, "QIANG_ZHUANG_BASE_EXP");
        public final static Property QiangZhuangExpMultiple = new Property(34, int.class, "qiangZhuangExpMultiple", false, "QIANG_ZHUANG_EXP_MULTIPLE");
    }


    public HeroAttributesDao(DaoConfig config) {
        super(config);
    }
    
    public HeroAttributesDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"HERO_ATTRIBUTES\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "\"ATTACK\" INTEGER NOT NULL ," + // 1: attack
                "\"ATTACK_INCREASE\" INTEGER NOT NULL ," + // 2: attackIncrease
                "\"ARMOR\" INTEGER NOT NULL ," + // 3: armor
                "\"ARMOR_INCREASE\" INTEGER NOT NULL ," + // 4: armorIncrease
                "\"CUR_LIFE\" INTEGER NOT NULL ," + // 5: curLife
                "\"LIFE_INCREASE\" INTEGER NOT NULL ," + // 6: lifeIncrease
                "\"MAX_LIFE\" INTEGER NOT NULL ," + // 7: maxLife
                "\"MONEY\" INTEGER NOT NULL ," + // 8: money
                "\"LEVEL\" INTEGER NOT NULL ," + // 9: level
                "\"EXPERIENCE\" INTEGER NOT NULL ," + // 10: experience
                "\"BASE_EXP\" INTEGER NOT NULL ," + // 11: baseExp
                "\"EXP_MULTIPLE\" INTEGER NOT NULL ," + // 12: expMultiple
                "\"BODY_POWER\" INTEGER NOT NULL ," + // 13: bodyPower
                "\"DAYS\" INTEGER NOT NULL ," + // 14: days
                "\"ATTACK_SPEED\" INTEGER NOT NULL ," + // 15: attackSpeed
                "\"SKILL_COUNT\" INTEGER NOT NULL ," + // 16: skillCount
                "\"SHENG_WANG\" INTEGER NOT NULL ," + // 17: shengWang
                "\"LI_LIAN\" INTEGER NOT NULL ," + // 18: liLian
                "\"LI_LIANG\" INTEGER NOT NULL ," + // 19: liLiang
                "\"LI_LIANG_EXP\" INTEGER NOT NULL ," + // 20: liLiangExp
                "\"LI_LIANG_BASE_EXP\" INTEGER NOT NULL ," + // 21: liLiangBaseExp
                "\"LI_LIANG_EXP_MULTIPLE\" INTEGER NOT NULL ," + // 22: liLiangExpMultiple
                "\"MIN_JIE\" INTEGER NOT NULL ," + // 23: minJie
                "\"MIN_JIE_EXP\" INTEGER NOT NULL ," + // 24: minJieExp
                "\"MIN_JIE_BASE_EXP\" INTEGER NOT NULL ," + // 25: minJieBaseExp
                "\"MIN_JIE_EXP_MULTIPLE\" INTEGER NOT NULL ," + // 26: minJieExpMultiple
                "\"ZHI_HUI\" INTEGER NOT NULL ," + // 27: zhiHui
                "\"ZHI_HUI_EXP\" INTEGER NOT NULL ," + // 28: zhiHuiExp
                "\"ZHI_HUI_BASE_EXP\" INTEGER NOT NULL ," + // 29: zhiHuiBaseExp
                "\"ZHI_HUI_EXP_MULTIPLE\" INTEGER NOT NULL ," + // 30: zhiHuiExpMultiple
                "\"QIANG_ZHUANG\" INTEGER NOT NULL ," + // 31: qiangZhuang
                "\"QIANG_ZHUANG_EXP\" INTEGER NOT NULL ," + // 32: qiangZhuangExp
                "\"QIANG_ZHUANG_BASE_EXP\" INTEGER NOT NULL ," + // 33: qiangZhuangBaseExp
                "\"QIANG_ZHUANG_EXP_MULTIPLE\" INTEGER NOT NULL );"); // 34: qiangZhuangExpMultiple
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"HERO_ATTRIBUTES\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, HeroAttributes entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindLong(2, entity.getAttack());
        stmt.bindLong(3, entity.getAttackIncrease());
        stmt.bindLong(4, entity.getArmor());
        stmt.bindLong(5, entity.getArmorIncrease());
        stmt.bindLong(6, entity.getCurLife());
        stmt.bindLong(7, entity.getLifeIncrease());
        stmt.bindLong(8, entity.getMaxLife());
        stmt.bindLong(9, entity.getMoney());
        stmt.bindLong(10, entity.getLevel());
        stmt.bindLong(11, entity.getExperience());
        stmt.bindLong(12, entity.getBaseExp());
        stmt.bindLong(13, entity.getExpMultiple());
        stmt.bindLong(14, entity.getBodyPower());
        stmt.bindLong(15, entity.getDays());
        stmt.bindLong(16, entity.getAttackSpeed());
        stmt.bindLong(17, entity.getSkillCount());
        stmt.bindLong(18, entity.getShengWang());
        stmt.bindLong(19, entity.getLiLian());
        stmt.bindLong(20, entity.getLiLiang());
        stmt.bindLong(21, entity.getLiLiangExp());
        stmt.bindLong(22, entity.getLiLiangBaseExp());
        stmt.bindLong(23, entity.getLiLiangExpMultiple());
        stmt.bindLong(24, entity.getMinJie());
        stmt.bindLong(25, entity.getMinJieExp());
        stmt.bindLong(26, entity.getMinJieBaseExp());
        stmt.bindLong(27, entity.getMinJieExpMultiple());
        stmt.bindLong(28, entity.getZhiHui());
        stmt.bindLong(29, entity.getZhiHuiExp());
        stmt.bindLong(30, entity.getZhiHuiBaseExp());
        stmt.bindLong(31, entity.getZhiHuiExpMultiple());
        stmt.bindLong(32, entity.getQiangZhuang());
        stmt.bindLong(33, entity.getQiangZhuangExp());
        stmt.bindLong(34, entity.getQiangZhuangBaseExp());
        stmt.bindLong(35, entity.getQiangZhuangExpMultiple());
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, HeroAttributes entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindLong(2, entity.getAttack());
        stmt.bindLong(3, entity.getAttackIncrease());
        stmt.bindLong(4, entity.getArmor());
        stmt.bindLong(5, entity.getArmorIncrease());
        stmt.bindLong(6, entity.getCurLife());
        stmt.bindLong(7, entity.getLifeIncrease());
        stmt.bindLong(8, entity.getMaxLife());
        stmt.bindLong(9, entity.getMoney());
        stmt.bindLong(10, entity.getLevel());
        stmt.bindLong(11, entity.getExperience());
        stmt.bindLong(12, entity.getBaseExp());
        stmt.bindLong(13, entity.getExpMultiple());
        stmt.bindLong(14, entity.getBodyPower());
        stmt.bindLong(15, entity.getDays());
        stmt.bindLong(16, entity.getAttackSpeed());
        stmt.bindLong(17, entity.getSkillCount());
        stmt.bindLong(18, entity.getShengWang());
        stmt.bindLong(19, entity.getLiLian());
        stmt.bindLong(20, entity.getLiLiang());
        stmt.bindLong(21, entity.getLiLiangExp());
        stmt.bindLong(22, entity.getLiLiangBaseExp());
        stmt.bindLong(23, entity.getLiLiangExpMultiple());
        stmt.bindLong(24, entity.getMinJie());
        stmt.bindLong(25, entity.getMinJieExp());
        stmt.bindLong(26, entity.getMinJieBaseExp());
        stmt.bindLong(27, entity.getMinJieExpMultiple());
        stmt.bindLong(28, entity.getZhiHui());
        stmt.bindLong(29, entity.getZhiHuiExp());
        stmt.bindLong(30, entity.getZhiHuiBaseExp());
        stmt.bindLong(31, entity.getZhiHuiExpMultiple());
        stmt.bindLong(32, entity.getQiangZhuang());
        stmt.bindLong(33, entity.getQiangZhuangExp());
        stmt.bindLong(34, entity.getQiangZhuangBaseExp());
        stmt.bindLong(35, entity.getQiangZhuangExpMultiple());
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public HeroAttributes readEntity(Cursor cursor, int offset) {
        HeroAttributes entity = new HeroAttributes( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.getInt(offset + 1), // attack
            cursor.getInt(offset + 2), // attackIncrease
            cursor.getInt(offset + 3), // armor
            cursor.getInt(offset + 4), // armorIncrease
            cursor.getInt(offset + 5), // curLife
            cursor.getInt(offset + 6), // lifeIncrease
            cursor.getInt(offset + 7), // maxLife
            cursor.getInt(offset + 8), // money
            cursor.getInt(offset + 9), // level
            cursor.getLong(offset + 10), // experience
            cursor.getLong(offset + 11), // baseExp
            cursor.getInt(offset + 12), // expMultiple
            cursor.getInt(offset + 13), // bodyPower
            cursor.getInt(offset + 14), // days
            cursor.getLong(offset + 15), // attackSpeed
            cursor.getInt(offset + 16), // skillCount
            cursor.getInt(offset + 17), // shengWang
            cursor.getInt(offset + 18), // liLian
            cursor.getInt(offset + 19), // liLiang
            cursor.getLong(offset + 20), // liLiangExp
            cursor.getLong(offset + 21), // liLiangBaseExp
            cursor.getInt(offset + 22), // liLiangExpMultiple
            cursor.getInt(offset + 23), // minJie
            cursor.getLong(offset + 24), // minJieExp
            cursor.getLong(offset + 25), // minJieBaseExp
            cursor.getInt(offset + 26), // minJieExpMultiple
            cursor.getInt(offset + 27), // zhiHui
            cursor.getLong(offset + 28), // zhiHuiExp
            cursor.getLong(offset + 29), // zhiHuiBaseExp
            cursor.getInt(offset + 30), // zhiHuiExpMultiple
            cursor.getInt(offset + 31), // qiangZhuang
            cursor.getLong(offset + 32), // qiangZhuangExp
            cursor.getLong(offset + 33), // qiangZhuangBaseExp
            cursor.getInt(offset + 34) // qiangZhuangExpMultiple
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, HeroAttributes entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setAttack(cursor.getInt(offset + 1));
        entity.setAttackIncrease(cursor.getInt(offset + 2));
        entity.setArmor(cursor.getInt(offset + 3));
        entity.setArmorIncrease(cursor.getInt(offset + 4));
        entity.setCurLife(cursor.getInt(offset + 5));
        entity.setLifeIncrease(cursor.getInt(offset + 6));
        entity.setMaxLife(cursor.getInt(offset + 7));
        entity.setMoney(cursor.getInt(offset + 8));
        entity.setLevel(cursor.getInt(offset + 9));
        entity.setExperience(cursor.getLong(offset + 10));
        entity.setBaseExp(cursor.getLong(offset + 11));
        entity.setExpMultiple(cursor.getInt(offset + 12));
        entity.setBodyPower(cursor.getInt(offset + 13));
        entity.setDays(cursor.getInt(offset + 14));
        entity.setAttackSpeed(cursor.getLong(offset + 15));
        entity.setSkillCount(cursor.getInt(offset + 16));
        entity.setShengWang(cursor.getInt(offset + 17));
        entity.setLiLian(cursor.getInt(offset + 18));
        entity.setLiLiang(cursor.getInt(offset + 19));
        entity.setLiLiangExp(cursor.getLong(offset + 20));
        entity.setLiLiangBaseExp(cursor.getLong(offset + 21));
        entity.setLiLiangExpMultiple(cursor.getInt(offset + 22));
        entity.setMinJie(cursor.getInt(offset + 23));
        entity.setMinJieExp(cursor.getLong(offset + 24));
        entity.setMinJieBaseExp(cursor.getLong(offset + 25));
        entity.setMinJieExpMultiple(cursor.getInt(offset + 26));
        entity.setZhiHui(cursor.getInt(offset + 27));
        entity.setZhiHuiExp(cursor.getLong(offset + 28));
        entity.setZhiHuiBaseExp(cursor.getLong(offset + 29));
        entity.setZhiHuiExpMultiple(cursor.getInt(offset + 30));
        entity.setQiangZhuang(cursor.getInt(offset + 31));
        entity.setQiangZhuangExp(cursor.getLong(offset + 32));
        entity.setQiangZhuangBaseExp(cursor.getLong(offset + 33));
        entity.setQiangZhuangExpMultiple(cursor.getInt(offset + 34));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(HeroAttributes entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(HeroAttributes entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(HeroAttributes entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
