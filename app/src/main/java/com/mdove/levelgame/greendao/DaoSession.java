package com.mdove.levelgame.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.mdove.levelgame.greendao.entity.Armors;
import com.mdove.levelgame.greendao.entity.DropGoods;
import com.mdove.levelgame.greendao.entity.HeroAttributes;
import com.mdove.levelgame.greendao.entity.Medicines;
import com.mdove.levelgame.greendao.entity.Monsters;
import com.mdove.levelgame.greendao.entity.MonstersPlace;
import com.mdove.levelgame.greendao.entity.Weapons;
import com.mdove.levelgame.greendao.entity.Packages;
import com.mdove.levelgame.greendao.AllGoods;
import com.mdove.levelgame.greendao.entity.BigMonsters;
import com.mdove.levelgame.greendao.entity.Material;

import com.mdove.levelgame.greendao.ArmorsDao;
import com.mdove.levelgame.greendao.DropGoodsDao;
import com.mdove.levelgame.greendao.HeroAttributesDao;
import com.mdove.levelgame.greendao.MedicinesDao;
import com.mdove.levelgame.greendao.MonstersDao;
import com.mdove.levelgame.greendao.MonstersPlaceDao;
import com.mdove.levelgame.greendao.WeaponsDao;
import com.mdove.levelgame.greendao.PackagesDao;
import com.mdove.levelgame.greendao.AllGoodsDao;
import com.mdove.levelgame.greendao.BigMonstersDao;
import com.mdove.levelgame.greendao.MaterialDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig armorsDaoConfig;
    private final DaoConfig dropGoodsDaoConfig;
    private final DaoConfig heroAttributesDaoConfig;
    private final DaoConfig medicinesDaoConfig;
    private final DaoConfig monstersDaoConfig;
    private final DaoConfig monstersPlaceDaoConfig;
    private final DaoConfig weaponsDaoConfig;
    private final DaoConfig packagesDaoConfig;
    private final DaoConfig allGoodsDaoConfig;
    private final DaoConfig bigMonstersDaoConfig;
    private final DaoConfig materialDaoConfig;

    private final ArmorsDao armorsDao;
    private final DropGoodsDao dropGoodsDao;
    private final HeroAttributesDao heroAttributesDao;
    private final MedicinesDao medicinesDao;
    private final MonstersDao monstersDao;
    private final MonstersPlaceDao monstersPlaceDao;
    private final WeaponsDao weaponsDao;
    private final PackagesDao packagesDao;
    private final AllGoodsDao allGoodsDao;
    private final BigMonstersDao bigMonstersDao;
    private final MaterialDao materialDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        armorsDaoConfig = daoConfigMap.get(ArmorsDao.class).clone();
        armorsDaoConfig.initIdentityScope(type);

        dropGoodsDaoConfig = daoConfigMap.get(DropGoodsDao.class).clone();
        dropGoodsDaoConfig.initIdentityScope(type);

        heroAttributesDaoConfig = daoConfigMap.get(HeroAttributesDao.class).clone();
        heroAttributesDaoConfig.initIdentityScope(type);

        medicinesDaoConfig = daoConfigMap.get(MedicinesDao.class).clone();
        medicinesDaoConfig.initIdentityScope(type);

        monstersDaoConfig = daoConfigMap.get(MonstersDao.class).clone();
        monstersDaoConfig.initIdentityScope(type);

        monstersPlaceDaoConfig = daoConfigMap.get(MonstersPlaceDao.class).clone();
        monstersPlaceDaoConfig.initIdentityScope(type);

        weaponsDaoConfig = daoConfigMap.get(WeaponsDao.class).clone();
        weaponsDaoConfig.initIdentityScope(type);

        packagesDaoConfig = daoConfigMap.get(PackagesDao.class).clone();
        packagesDaoConfig.initIdentityScope(type);

        allGoodsDaoConfig = daoConfigMap.get(AllGoodsDao.class).clone();
        allGoodsDaoConfig.initIdentityScope(type);

        bigMonstersDaoConfig = daoConfigMap.get(BigMonstersDao.class).clone();
        bigMonstersDaoConfig.initIdentityScope(type);

        materialDaoConfig = daoConfigMap.get(MaterialDao.class).clone();
        materialDaoConfig.initIdentityScope(type);

        armorsDao = new ArmorsDao(armorsDaoConfig, this);
        dropGoodsDao = new DropGoodsDao(dropGoodsDaoConfig, this);
        heroAttributesDao = new HeroAttributesDao(heroAttributesDaoConfig, this);
        medicinesDao = new MedicinesDao(medicinesDaoConfig, this);
        monstersDao = new MonstersDao(monstersDaoConfig, this);
        monstersPlaceDao = new MonstersPlaceDao(monstersPlaceDaoConfig, this);
        weaponsDao = new WeaponsDao(weaponsDaoConfig, this);
        packagesDao = new PackagesDao(packagesDaoConfig, this);
        allGoodsDao = new AllGoodsDao(allGoodsDaoConfig, this);
        bigMonstersDao = new BigMonstersDao(bigMonstersDaoConfig, this);
        materialDao = new MaterialDao(materialDaoConfig, this);

        registerDao(Armors.class, armorsDao);
        registerDao(DropGoods.class, dropGoodsDao);
        registerDao(HeroAttributes.class, heroAttributesDao);
        registerDao(Medicines.class, medicinesDao);
        registerDao(Monsters.class, monstersDao);
        registerDao(MonstersPlace.class, monstersPlaceDao);
        registerDao(Weapons.class, weaponsDao);
        registerDao(Packages.class, packagesDao);
        registerDao(AllGoods.class, allGoodsDao);
        registerDao(BigMonsters.class, bigMonstersDao);
        registerDao(Material.class, materialDao);
    }
    
    public void clear() {
        armorsDaoConfig.clearIdentityScope();
        dropGoodsDaoConfig.clearIdentityScope();
        heroAttributesDaoConfig.clearIdentityScope();
        medicinesDaoConfig.clearIdentityScope();
        monstersDaoConfig.clearIdentityScope();
        monstersPlaceDaoConfig.clearIdentityScope();
        weaponsDaoConfig.clearIdentityScope();
        packagesDaoConfig.clearIdentityScope();
        allGoodsDaoConfig.clearIdentityScope();
        bigMonstersDaoConfig.clearIdentityScope();
        materialDaoConfig.clearIdentityScope();
    }

    public ArmorsDao getArmorsDao() {
        return armorsDao;
    }

    public DropGoodsDao getDropGoodsDao() {
        return dropGoodsDao;
    }

    public HeroAttributesDao getHeroAttributesDao() {
        return heroAttributesDao;
    }

    public MedicinesDao getMedicinesDao() {
        return medicinesDao;
    }

    public MonstersDao getMonstersDao() {
        return monstersDao;
    }

    public MonstersPlaceDao getMonstersPlaceDao() {
        return monstersPlaceDao;
    }

    public WeaponsDao getWeaponsDao() {
        return weaponsDao;
    }

    public PackagesDao getPackagesDao() {
        return packagesDao;
    }

    public AllGoodsDao getAllGoodsDao() {
        return allGoodsDao;
    }

    public BigMonstersDao getBigMonstersDao() {
        return bigMonstersDao;
    }

    public MaterialDao getMaterialDao() {
        return materialDao;
    }

}
